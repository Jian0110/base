<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <display-name>Archetype Created Web Application</display-name>
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <!-- 1.加载spring容器，也就是加载applicationContext.xml -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <!-- 监听器 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--log4j2 begin(log4j在Spring5中已经被移除)-->
    <context-param>
        <param-name>log4jConfiguration</param-name>
        <param-value>classpath:log4j2.properties</param-value>
    </context-param>
    <listener>
        <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
    </listener>
    <!-- log4j2-end -->

    <!--2、配置SpringMVC核心分发器DispatcherServlet -->
    <!-- 即指定servlet处理的class以及启动初始化参数配置 -->
    <servlet>
        <servlet-name>springMVC</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 初始化参数 -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- 3、指定url-pattern路径交给指定的servlet-name处理 -->
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <!-- 浏览器访问http://localhost:8080/projectName（过滤掉上下文剩/projectName）都会去映射相同的servlet-name中  -->
        <!-- 之后再映射到servlet-class中进行处理-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>
